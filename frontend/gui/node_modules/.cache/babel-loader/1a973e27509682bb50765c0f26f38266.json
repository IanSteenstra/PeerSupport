{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steeni\\\\Documents\\\\Github\\\\TherapyNow\\\\frontend\\\\gui\\\\src\\\\containers\\\\Login.js\";\nimport React from 'react';\nimport { Form, Icon, Input, Button, Spin } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\nconst FormItem = Form.Item;\nconst antIcon = React.createElement(Icon, {\n  type: \"loading\",\n  style: {\n    fontSize: 24\n  },\n  spin: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n});\n\nclass NormalLoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          this.props.onAuth(values.userName, values.password);\n          this.props.history.push('/');\n        }\n      });\n    };\n  }\n\n  render() {\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.props.error.message);\n    }\n\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, errorMessage, this.props.loading ? React.createElement(Spin, {\n      indicator: antIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }) : React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, getFieldDecorator('userName', {\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your Password!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      style: {\n        marginRight: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Login\"), \"Or\", React.createElement(NavLink, {\n      style: {\n        marginRight: '10px'\n      },\n      to: \"/signup/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" signup\"))));\n  }\n\n}\n\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm);","map":{"version":3,"sources":["C:/Users/steeni/Documents/Github/TherapyNow/frontend/gui/src/containers/Login.js"],"names":["React","Form","Icon","Input","Button","Spin","connect","NavLink","actions","FormItem","Item","antIcon","fontSize","NormalLoginForm","Component","handleSubmit","e","preventDefault","props","form","validateFields","err","values","onAuth","userName","password","history","push","render","errorMessage","error","message","getFieldDecorator","loading","rules","required","color","marginRight","WrappedNormalLoginForm","create","mapStateToProps","state","mapDispatchToProps","dispatch","username","authLogin"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Form, Icon, Input, Button, Spin } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as actions from '../store/actions/auth';\r\n\r\nconst FormItem = Form.Item;\r\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\r\n\r\n\r\nclass NormalLoginForm extends React.Component {\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                this.props.onAuth(values.userName, values.password);\r\n                this.props.history.push('/');\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let errorMessage = null;\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            );\r\n        }\r\n\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div>\r\n                {errorMessage}\r\n                {\r\n                    this.props.loading ?\r\n\r\n                        <Spin indicator={antIcon} />\r\n\r\n                        :\r\n\r\n                        <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n\r\n                            <FormItem>\r\n                                {getFieldDecorator('userName', {\r\n                                    rules: [{ required: true, message: 'Please input your username!' }],\r\n                                })(\r\n                                    <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\r\n                                )}\r\n                            </FormItem>\r\n\r\n                            <FormItem>\r\n                                {getFieldDecorator('password', {\r\n                                    rules: [{ required: true, message: 'Please input your Password!' }],\r\n                                })(\r\n                                    <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\r\n                                )}\r\n                            </FormItem>\r\n\r\n                            <FormItem>\r\n                                <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: '10px' }}>\r\n                                    Login\r\n                    </Button>\r\n                                Or\r\n                    <NavLink\r\n                                    style={{ marginRight: '10px' }}\r\n                                    to='/signup/'> signup\r\n                    </NavLink>\r\n                            </FormItem>\r\n                        </Form>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.loading,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm);"]},"metadata":{},"sourceType":"module"}