{"ast":null,"code":"import axios from 'axios';\nimport * as actionTypes from './actionTypes';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = token => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post('http://127.0.0.1:8000/rest-auth/login/', {\n      username: username,\n      password: password\n    }).then(res => {\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post('http://127.0.0.1:8000/rest-auth/registration/', {\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2\n    }).then(res => {\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/steeni/Documents/Github/TherapyNow - New/frontend/gui/src/store/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","token","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","username","password","post","then","res","data","key","expirationDate","Date","getTime","setItem","catch","err","authSignup","email","password1","password2"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHC,IAAAA,IAAI,EAAEF,WAAW,CAACG;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAChC,SAAO;AACHH,IAAAA,IAAI,EAAEF,WAAW,CAACM,YADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,QAAQ,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHN,IAAAA,IAAI,EAAEF,WAAW,CAACS,SADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,MAAM,GAAG,MAAM;AACxBC,EAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,gBAAxB;AACA,SAAO;AACHV,IAAAA,IAAI,EAAEF,WAAW,CAACa;AADf,GAAP;AAGH,CANM;AAQP,OAAO,MAAMC,gBAAgB,GAAGC,cAAc,IAAI;AAC9C,SAAOC,QAAQ,IAAI;AACfC,IAAAA,UAAU,CAAC,MAAM;AACbD,MAAAA,QAAQ,CAACN,MAAM,EAAP,CAAR;AACH,KAFS,EAEPK,cAAc,GAAG,IAFV,CAAV;AAGH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMG,SAAS,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7C,SAAOJ,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACf,SAAS,EAAV,CAAR;AACAF,IAAAA,KAAK,CAACsB,IAAN,CAAW,wCAAX,EAAqD;AACjDF,MAAAA,QAAQ,EAAEA,QADuC;AAEjDC,MAAAA,QAAQ,EAAEA;AAFuC,KAArD,EAIKE,IAJL,CAIUC,GAAG,IAAI;AACT,YAAMlB,KAAK,GAAGkB,GAAG,CAACC,IAAJ,CAASC,GAAvB;AACA,YAAMC,cAAc,GAAG,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,KAAuB,OAAO,IAAvC,CAAvB;AACAjB,MAAAA,YAAY,CAACkB,OAAb,CAAqB,OAArB,EAA8BxB,KAA9B;AACAM,MAAAA,YAAY,CAACkB,OAAb,CAAqB,gBAArB,EAAuCH,cAAvC;AACAV,MAAAA,QAAQ,CAACZ,WAAW,CAACC,KAAD,CAAZ,CAAR;AACAW,MAAAA,QAAQ,CAACF,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AACH,KAXL,EAYKgB,KAZL,CAYWC,GAAG,IAAI;AACVf,MAAAA,QAAQ,CAACT,QAAQ,CAACwB,GAAD,CAAT,CAAR;AACH,KAdL;AAeH,GAjBD;AAkBH,CAnBM;AAqBP,OAAO,MAAMC,UAAU,GAAG,CAACb,QAAD,EAAWc,KAAX,EAAkBC,SAAlB,EAA6BC,SAA7B,KAA2C;AACjE,SAAOnB,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACf,SAAS,EAAV,CAAR;AACAF,IAAAA,KAAK,CAACsB,IAAN,CAAW,+CAAX,EAA4D;AACxDF,MAAAA,QAAQ,EAAEA,QAD8C;AAExDc,MAAAA,KAAK,EAAEA,KAFiD;AAGxDC,MAAAA,SAAS,EAAEA,SAH6C;AAIxDC,MAAAA,SAAS,EAAEA;AAJ6C,KAA5D,EAMKb,IANL,CAMUC,GAAG,IAAI;AACT,YAAMlB,KAAK,GAAGkB,GAAG,CAACC,IAAJ,CAASC,GAAvB;AACA,YAAMC,cAAc,GAAG,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,KAAuB,OAAO,IAAvC,CAAvB;AACAjB,MAAAA,YAAY,CAACkB,OAAb,CAAqB,OAArB,EAA8BxB,KAA9B;AACAM,MAAAA,YAAY,CAACkB,OAAb,CAAqB,gBAArB,EAAuCH,cAAvC;AACAV,MAAAA,QAAQ,CAACZ,WAAW,CAACC,KAAD,CAAZ,CAAR;AACAW,MAAAA,QAAQ,CAACF,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AACH,KAbL,EAcKgB,KAdL,CAcWC,GAAG,IAAI;AACVf,MAAAA,QAAQ,CAACT,QAAQ,CAACwB,GAAD,CAAT,CAAR;AACH,KAhBL;AAiBH,GAnBD;AAoBH,CArBM","sourcesContent":["import axios from 'axios';\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    }\r\n}\r\n\r\nexport const authSuccess = token => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        token: token\r\n    }\r\n}\r\n\r\nexport const authFail = error => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n}\r\n\r\nexport const checkAuthTimeout = expirationTime => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000)\r\n    }\r\n}\r\n\r\nexport const authLogin = (username, password) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        axios.post('http://127.0.0.1:8000/rest-auth/login/', {\r\n            username: username,\r\n            password: password\r\n        })\r\n            .then(res => {\r\n                const token = res.data.key;\r\n                const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\r\n                localStorage.setItem('token', token);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                dispatch(authSuccess(token));\r\n                dispatch(checkAuthTimeout(3600));\r\n            })\r\n            .catch(err => {\r\n                dispatch(authFail(err))\r\n            })\r\n    }\r\n}\r\n\r\nexport const authSignup = (username, email, password1, password2) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        axios.post('http://127.0.0.1:8000/rest-auth/registration/', {\r\n            username: username,\r\n            email: email,\r\n            password1: password1,\r\n            password2: password2\r\n        })\r\n            .then(res => {\r\n                const token = res.data.key;\r\n                const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\r\n                localStorage.setItem('token', token);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                dispatch(authSuccess(token));\r\n                dispatch(checkAuthTimeout(3600));\r\n            })\r\n            .catch(err => {\r\n                dispatch(authFail(err))\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}